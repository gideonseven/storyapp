plugins {
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.android.application'
    id 'kotlin-parcelize'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs'
}

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keyProp = new Properties()
keyProp.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.don.storyApp"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        buildConfigField('String', "PREFERENCES_NAME", keyProp['sharedPreferencesName'])
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            testCoverageEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
        dataBinding true
    }

    testOptions {
        animationsDisabled = true
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:2.0.0"

    //testing
    def test_junit_version = "4.13.2"
    def test_ext_junit_version = "1.1.3"
    def text_espresso_core_version = "3.4.0"
    testImplementation "junit:junit:${test_junit_version}"
    androidTestImplementation "androidx.test.ext:junit:${test_ext_junit_version}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${text_espresso_core_version}"

    //mockito
    def mockito_version = "3.12.4"
    def core_testing_version = "2.1.0"
    def coroutine_test_version = "1.5.2"
    def byteBuddy_version = "1.12.8"
    testImplementation "org.mockito:mockito-core:${mockito_version}"
    testImplementation "org.mockito:mockito-inline:${mockito_version}"
    implementation "net.bytebuddy:byte-buddy:${byteBuddy_version}"
    // https://mvnrepository.com/artifact/net.bytebuddy/byte-buddy
    testImplementation "net.bytebuddy:byte-buddy-agent:${byteBuddy_version}"
    // https://mvnrepository.com/artifact/net.bytebuddy/byte-buddy-agent

    //special testing
    testImplementation "androidx.arch.core:core-testing:${core_testing_version}" // InstantTaskExecutorRule
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${coroutine_test_version}"

    //special instrumentation testing
    def fragment_testing_version = "1.4.1"
    def espresso_contrib_version = "3.0.2"
    androidTestImplementation "androidx.arch.core:core-testing:${core_testing_version}" // InstantTaskExecutorRule
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${coroutine_test_version}"
    //TestCoroutineDispatcher
    debugImplementation "androidx.fragment:fragment-testing:${fragment_testing_version}" //launchFragmentInContainer
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:${espresso_contrib_version}"

    //mock web server
    def espresso_version = "3.4.0"
    def okhttp_mock_version = "4.9.3"
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:${okhttp_mock_version}"
    androidTestImplementation "com.squareup.okhttp3:okhttp-tls:${okhttp_mock_version}"
    implementation "androidx.test.espresso:espresso-idling-resource:${espresso_version}"
    androidTestImplementation "androidx.test.espresso:espresso-intents:${espresso_version}"//IntentsTestRule

    def core_version = "1.7.0"
    def appcompat_version = "1.4.1"
    def material_version = "1.5.0"
    implementation "androidx.core:core-ktx:${core_version}"
    implementation "androidx.appcompat:appcompat:${appcompat_version}"
    implementation "com.google.android.material:material:${material_version}"

    def compose_ui_version = "1.3.1"
    def compose_activity_version = "1.6.1"
    implementation "androidx.activity:activity-compose:${compose_activity_version}"
    implementation "androidx.compose.ui:ui:${compose_ui_version}"
    implementation "androidx.compose.ui:ui-tooling-preview:${compose_ui_version}"

    // RecyclerView
    def recyclerview_version = "1.2.1"
    implementation "androidx.recyclerview:recyclerview:${recyclerview_version}"

    // androidx constraintLayout
    def constraintLayout_version = "2.1.4"
    implementation "androidx.constraintlayout:constraintlayout:${constraintLayout_version}"

    // androidx navigation
    def navigation_version = "2.5.3"
    implementation "androidx.navigation:navigation-fragment-ktx:${navigation_version}"
    implementation "androidx.navigation:navigation-ui-ktx:${navigation_version}"

    // androidx livedata
    def liveData_version = "2.5.1"
    //coroutine support
    def viewModel_ktx_version = "2.5.1"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${liveData_version}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${viewModel_ktx_version}" //viewModelScope

    // retrofit & okhttp
    def retrofit_version = "2.9.0"
    def okhttp_version = "5.0.0-alpha.3"
    implementation "com.squareup.retrofit2:retrofit:${retrofit_version}"
    implementation "com.squareup.retrofit2:converter-gson:${retrofit_version}"
    implementation "com.squareup.okhttp3:okhttp:${okhttp_version}"

    // dagger-hilt
    def dagger_version = "2.43.2"
    implementation "com.google.dagger:hilt-android:$dagger_version"
    kapt "com.google.dagger:hilt-compiler:$dagger_version"
    //hilt - test - with kotlin
    kaptTest "com.google.dagger:hilt-android-compiler:$dagger_version"
    // For instrumented tests.
    androidTestImplementation "com.google.dagger:hilt-android-testing:$dagger_version"
    // ...with Kotlin.
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$dagger_version"

    // Timber
    def timber_version = "4.7.1"
    implementation "com.jakewharton.timber:timber:${timber_version}"

    // lottie
    def lottie_version = "4.1.0"
    implementation "com.airbnb.android:lottie:${lottie_version}"

    // glide
    def glide_version = "4.14.2"
    implementation "com.github.bumptech.glide:glide:${glide_version}"
    kapt "com.github.bumptech.glide:compiler:${glide_version}"

    //camera x
    def camerax_version = "1.1.0"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    implementation "androidx.camera:camera-view:${camerax_version}"

    // easy permission
    def easyPermission_version = "3.0.0"
    implementation "pub.devrel:easypermissions:${easyPermission_version}"

    // paging 3
    def paging3_version = "3.1.1"
    implementation "androidx.paging:paging-runtime-ktx:${paging3_version}"

    //maps
    def maps_version = "18.1.0"
    implementation "com.google.android.gms:play-services-maps:${maps_version}"

    // location
    def location_version = "21.0.1"
    implementation "com.google.android.gms:play-services-location:${location_version}"

    // room
    def room_version = "2.4.0-rc01"
    implementation "androidx.room:room-ktx:${room_version}"
    implementation "androidx.room:room-paging:${room_version}"
    kapt "androidx.room:room-compiler:${room_version}"

    // niddler
    def niddler_version = "1.7.0"
    implementation "com.chimerapps.niddler:niddler:${niddler_version}"
}